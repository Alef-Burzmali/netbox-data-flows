name: Run tests on push and pull request

on:
  push:
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE.md'
      - '.github/RELEASE-TEMPLATE.md'
      - 'docs/**'
    branches-ignore:
      - 'gh-pages'
  pull_request:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  get-netbox-versions:
    uses: ./.github/workflows/get-netbox-versions.yml
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name

  run-test-matrix:
    name: Run tests
    needs: get-netbox-versions
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: ubuntu-latest
    env:
      NETBOX_CONFIGURATION: netbox.configuration_testing
    strategy:
      matrix:
        netbox-version: ${{ fromJSON(needs.get-netbox-versions.outputs.supported_versions) }}
        python-version: ["3.12"]
        node-version: ["20.x"]
        include:
          - netbox-version: ${{ fromJSON(needs.get-netbox-versions.outputs.latest_version) }}
            python-version: "3.11"
            node-version: "20.x"
          - netbox-version: ${{ fromJSON(needs.get-netbox-versions.outputs.latest_version) }}
            python-version: "3.10"
            node-version: "20.x"
    continue-on-error: ${{ matrix.netbox-version != fromJSON(needs.get-netbox-versions.outputs.latest_version) }}
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_USER: netbox
          POSTGRES_PASSWORD: netbox
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: netbox-data-flows

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Checkout NetBox release ${{ matrix.netbox-version }}
        uses: actions/checkout@v4
        with:
          repository: "netbox-community/netbox"
          path: netbox
          ref: ${{ matrix.netbox-version }}

      - name: Install NetBox
        working-directory: netbox
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage tblib

      - name: Install NetBox Data Flows
        working-directory: netbox-data-flows
        run: |
          pip install .

      - name: Configure NetBox
        working-directory: netbox
        run: |
          echo >> netbox/netbox/configuration_testing.py
          echo "PLUGINS = ['netbox_data_flows']" >> netbox/netbox/configuration_testing.py
          echo >> netbox/netbox/configuration_testing.py

      - name: Check missing migrations
        working-directory: netbox
        run: |
          python netbox/manage.py makemigrations --check netbox_data_flows

      - name: Run tests
        working-directory: netbox
        run: |
          python netbox/manage.py test --parallel auto netbox_data_flows

  run-tests:
    name: All tests finished
    needs: run-test-matrix
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: ubuntu-latest
    steps:
      - run: echo ok
